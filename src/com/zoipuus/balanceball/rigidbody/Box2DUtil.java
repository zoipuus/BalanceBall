package com.zoipuus.balanceball.rigidbody;

import org.jbox2d.collision.CircleDef;
import org.jbox2d.collision.PolygonDef;
import org.jbox2d.common.Vec2;
import org.jbox2d.dynamics.Body;
import org.jbox2d.dynamics.BodyDef;
import org.jbox2d.dynamics.World;

import com.zoipuus.balanceball.ConstantUtil;

//生成物理形状的工具类
public class Box2DUtil {
	/**
	 * 创建矩形物体(图片)
	 * 
	 * @param x
	 * @param y
	 * @param halfWidth
	 * @param halfHeight
	 * @param isStatic
	 * @param world
	 * @return
	 */
	public static Body createRectBody(float x,// x坐标
			float y,// y坐标
			float halfWidth,// 半宽
			float halfHeight,// 半高
			boolean isStatic,// 是否为静止的
			World world// 世界
	) {
		// 创建多边形描述对象
		PolygonDef shape = new PolygonDef();
		// 设置密度
		if (isStatic) {
			shape.density = 0;
		} else {
			shape.density = 1.0f;
		}
		// 设置摩擦系数
		shape.friction = 0.0f;
		// 设置能量损失率（反弹）
		shape.restitution = 0.3f;
		shape.setAsBox(halfWidth / ConstantUtil.RATE, halfHeight
				/ ConstantUtil.RATE);
		// 创建刚体描述对象
		BodyDef bodyDef = new BodyDef();
		// 设置位置
		bodyDef.position.set(x / ConstantUtil.RATE, y / ConstantUtil.RATE);
		// 在世界中创建刚体
		Body bodyTemp = world.createBody(bodyDef);
		// 指定刚体形状
		bodyTemp.createShape(shape);
		bodyTemp.setMassFromShapes();

		return bodyTemp;
	}

	/**
	 * 创建圆形（图片）
	 * 
	 * @param x
	 * @param y
	 * @param radius
	 * @param isStatic
	 * @param world
	 * @return
	 */
	public static Body createCircleBody(float x,// x坐标
			float y,// y坐标
			float radius,// 半径
			boolean isStatic,// 是否为静止的
			World world// 世界
	) {
		// 创建圆描述对象
		CircleDef shape = new CircleDef();
		// 设置密度
		if (isStatic) {
			shape.density = 0;
		} else {
			shape.density = 1.0f;
		}
		// 设置摩擦系数
		shape.friction = 0.0f;
		// 设置能量损失率（反弹）
		shape.restitution = 0.3f;
		// 设置半径
		shape.radius = radius / ConstantUtil.RATE;

		// 创建刚体描述对象
		BodyDef bodyDef = new BodyDef();
		// 设置位置
		bodyDef.position.set(x / ConstantUtil.RATE, y / ConstantUtil.RATE);
		// 在世界中创建刚体
		Body bodyTemp = world.createBody(bodyDef);
		// 指定刚体形状
		bodyTemp.createShape(shape);
		bodyTemp.setMassFromShapes();
		return bodyTemp;
	}

	/**
	 * 创建多边形物体(图片)
	 * 
	 * @param x
	 * @param y
	 * @param points
	 * @param isStatic
	 * @param world
	 * @return
	 */
	public static Body createPolygonBody(float x,// x坐标
			float y,// y坐标
			float[][] points,// 点序列
			boolean isStatic,// 是否为静止的
			World world// 世界
	) {
		// 创建多边形描述对象
		PolygonDef shape = new PolygonDef();
		// 设置密度
		if (isStatic) {
			shape.density = 0;
		} else {
			shape.density = 1.0f;
		}
		// 设置摩擦系数
		shape.friction = 0.0f;
		// 设置能量损失率（反弹）
		shape.restitution = 0.3f;

		for (float[] fa : points) {
			shape.addVertex(new Vec2(fa[0] / ConstantUtil.RATE, fa[1]
					/ ConstantUtil.RATE));
		}

		// 创建刚体描述对象
		BodyDef bodyDef = new BodyDef();
		// 设置位置
		bodyDef.position.set(x / ConstantUtil.RATE, y / ConstantUtil.RATE);
		// 在世界中创建刚体
		Body bodyTemp = world.createBody(bodyDef);
		// 指定刚体形状
		bodyTemp.createShape(shape);
		bodyTemp.setMassFromShapes();

		return bodyTemp;
	}
}